#################################################
# DO Community Playbooks: Initial Server Setup
#################################################
---
    - hosts: all
      become: true
      vars_files:
        - group_vars/SetupUbuntu20.yml
    
      tasks:
        - name: Install Prerequisites
          apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
    
    # Install Packages
        - name: Update package mirrors and existing packages
          apt: update_cache=yes upgrade=yes
    
        - name: Install required system packages
          apt: name={{ sys_packages }} state=latest

    # Sudo Group Setup
        - name: Make sure we have a 'bene' group
          group:
            name: bene
            state: present
    
        - name: Allow 'bene' group to have passwordless sudo
          lineinfile:
            path: /etc/sudoers
            state: present
            regexp: '^%bene'
            line: '%bene ALL=(ALL) NOPASSWD: ALL'
            validate: '/usr/sbin/visudo -cf %s'
    
    # User + Key Setup
        - name: Create a new regular user with sudo privileges
          user:
            name: "{{ create_user }}"
            state: present
            groups: bene
            append: true
            create_home: true
            shell: /bin/bash
    
        - name: Set authorized key for remote user
          authorized_key:
            user: "{{ create_user }}"
            state: present
            key: "{{ copy_local_key }}"
    
    # Upload SSH Config
        - name: Upload custom ssh config
          copy:
           src: files/SetupUbuntu2004/ubuntu20ssh.conf
           dest: /etc/ssh/sshd_config.d/benessh.conf
           remote_src: no   

    # MOTD Access Message
        - name: Upload custom MOTD access warning
          copy:
           src: files/SetupUbuntu2004/issue.net
           dest: /etc/issue.net
           remote_src: no

        - name: Disable default banner message from MOTD
          become: yes
          become_user: root
          lineinfile:
           path: /etc/pam.d/sshd
           regexp: '{{item.From}}'
           line: '{{item.To}}'
           state: present  
          with_items:
              - { From: 'session    optional     pam_motd.so  motd=/run/motd.dynamic', To: '# session    optional     pam_motd.so  motd=/run/motd.dynamic' }
              - { From: 'session    optional     pam_motd.so noupdate', To: '# session    optional     pam_motd.so noupdate' }

    # Fail2Ban Config
        - name: Upload Fail2Ban config
          copy:
           src: files/SetupUbuntu2004/jail.local
           dest: /etc/fail2ban/jail.local
           remote_src: no        

    # Netdata install
        - name: Download the installation script for netdata
          get_url:
            url: https://my-netdata.io/kickstart.sh
            dest: ~/kickstart.sh
            mode: +x

        - name: Install Netdata
          command: ~/kickstart.sh --dont-wait

        - name: Cleanup installation script
          file:
            path: ~/kickstart.sh
            state: absent

        - name: Place Netdata config file
          become: yes
          become_user: root        
          template:
            src: templates/netdata.conf.j2
            dest: /etc/netdata/netdata.conf
            owner: root
            group: root
            mode: u=rx,g=rx,o=r
            backup: no



        - name: Connect to Netdata parent
          become: yes
          become_user: root        
          template:
            src: templates/netdata-stream.conf.j2
            dest: /etc/netdata/stream.conf
            owner: root
            group: root
            mode: u=rx,g=rx,o=r
            backup: no

        
    # Cleanup        
        - name: Restart Fail2Ban and make sure it starts at boot
          ansible.builtin.systemd: 
            name: fail2ban
            enabled: yes
            state: restarted

        - name: Restart SSH service to ensure changes are loaded
          ansible.builtin.service:
            name: sshd
            state: restarted

        - name: Restart Netdata service to ensure changes are loaded
          ansible.builtin.service:
            name: netdata
            state: restarted

