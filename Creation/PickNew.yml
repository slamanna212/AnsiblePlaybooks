---
- hosts: localhost
  vars_prompt:
    - name: droplet_type
      prompt: "What type of Droplet would you like to create? Choices: loadbalancer | web | wpadmin | control | file | base (Type exactly as seen here)"
      private: no
  tasks: 
        - import_tasks: NewLoadbalancer.yml 
          when: droplet_type == "loadbalancer"
        - import_tasks: NewWeb.yml 
          when: droplet_type == "web"          
        - import_tasks: NewWPAdmin.yml 
          when: droplet_type == "wpadmin"
        - import_tasks: NewControl.yml 
          when: droplet_type == "control"             
        - import_tasks: NewFile.yml 
          when: droplet_type == "file"
        - import_tasks: NewBase.yml 
          when: droplet_type == "base"  


####################
## PREPROVISIONING #
####################

        - name: Add provisioning tag to new Loadbalancer droplet
          community.digitalocean.digital_ocean_tag:
            name: "provisioning"
            resource_id: "{{ droplet_create_temp.data.droplet.id }}"
            state: present

####################
### PROVISIONING ###
####################

#Refresh Inventory File to pick up new host
        - name: Refresh Inventory File
          meta: refresh_inventory

# Gather facts must be set to no to prevent ansible from trying to connect to new droplet over ssh before its ready
- name: Bring Droplet up to baseline
  hosts: provisioning
  gather_facts: no
  vars:
    ansible_ssh_private_key_file: ~/.ssh/doinit
    ansible_ssh_user: root
  roles:
    - pro_ubuntu20

####################
# POSTPROVISIONING #
####################
- hosts: localhost
  tasks: 
        - name: Remove provisioning from the Loadbalancer droplet
          community.digitalocean.digital_ocean_tag:
            name: "provisioning"
            resource_id: "{{ droplet_create_temp.data.droplet.id }}"
            state: present
